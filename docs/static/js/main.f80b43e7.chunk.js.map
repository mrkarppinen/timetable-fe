{"version":3,"sources":["services/timetable-service.js","actions/index.js","presentation/Time.js","presentation/Departure.js","presentation/ListItem.js","services/storage.js","presentation/AddNew.js","containers/AddNewContainer.js","presentation/List.js","containers/ListContainer.js","presentation/Display.js","containers/DisplayScheduleContainer.js","containers/Root.js","reducers/index.js","store/index.js","index.js"],"names":["timeTableclient","TimetableClient","loadFromApi","id","promises","Promise","resolve","get","formattedDate","then","res","Object","objectSpread","map","all","arr","timetables","date","arguments","length","undefined","Date","day","getDate","month","getMonth","year","getFullYear","substr","concat","fetchingTimetablesDone","type","_parseHour","time","hour","Math","floor","slice","_parseMinute","Time","_ref","value","minute","react_default","a","createElement","Fragment","Line","styled","small","_templateObject","Departure","lines","presentation_Time","join","ListItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","departures","timetable","getDepartures","setState","_this2","className","onClick","history","push","index","style","cursor","title","display","justifyContent","item","key","presentation_Departure","lib_default","timeout","enabled","callback","update","count","now","getHours","getMinutes","filter","React","Component","withRouter","Storage","separator","stops","window","localStorage","getItem","split","getStops","saveIds","indexOf","splice","setItem","Button","button","AddNew_templateObject","Form","form","_templateObject2","AddButton","_templateObject3","AddNew","displayForm","toggleForm","bind","assertThisInitialized","onSubmit","event","preventDefault","target","stopId","trim","onAdd","addStop","toggleButtonClass","toggleButtonValue","marginTop","autoComplete","name","placeholder","connect","dispatch","loadTimetable","data","catch","err","console","error","fetchOneTimetable","ListDiv","div","List_templateObject","List","loading","presentation_ListItem","assign","AddNewContainer","list","Container","Display_templateObject","DisplaySchedule","loaded","match","params","stop","Root","log","storage","onMount","HashRouter","Switch","Route","path","component","DisplayScheduleContainer","ListContainer","ids","fetchTimetables","rootReducer","combineReducers","loadingOne","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","containers_Root","document","getElementById"],"mappings":"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","file":"static/js/main.f80b43e7.chunk.js","sourcesContent":["import TimetableClient from 'timetable-client';\n \nconst timeTableclient = new TimetableClient();\n\nconst loadTimetable = (id) => {\n    return fetch(`http://localhost:3001/api/line?stop=${id}`)\n    .then( res => res.json() );\n};\n\n\nconst loadFromApi = (id) => {\n    const promises = typeof id === 'string' ? [Promise.resolve(timeTableclient.get(id, formattedDate())).then( res => ({...res, id}) )] : id.map( id => Promise.resolve(timeTableclient.get(id, formattedDate())).then( res => ({...res, id}) ) );\n    return Promise.all(promises).then( arr => ({timetables: arr}) );\n};\n\n\nconst formattedDate = (date = new Date()) => {\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n\n    day = ('0' + day).substr(-2);\n    month = ('0'+month).substr(-2); \n\n    return `${year}${month}${day}`;\n};\n\n\n\nexport {loadFromApi as loadTimetable};","import {loadTimetable} from '../services/timetable-service';\n\nexport const FETCH_TIMETABLES_START = \"feth_timetables_start\";\nexport const FETCH_TIMETABLES = \"fetch_timetables\";\nexport const FETCH_TIMETABLES_DONE = \"fetch_timetables_done\";\nexport const FETCH_ONE_START = \"fetch_one_start\";\n\n\n\nconst startFetchingTimetables = () => {\n    return {\n        type: FETCH_TIMETABLES_START\n    };\n};\n\nconst startFetchingOne = () => {\n    return {\n        type: FETCH_ONE_START\n    };\n};\n\nconst fetchingTimetablesDone = (timetables = []) => {\n    return {\n        type: FETCH_TIMETABLES_DONE,\n        timetables\n    };\n}\n\nexport const fetchTimetables = (ids) => {\n    return dispatch => {\n        dispatch(startFetchingTimetables());\n        return loadTimetable(ids)\n        .then( data => {\n            dispatch(fetchingTimetablesDone(data.timetables));\n        })\n        .catch( err => {\n            console.error(err);\n            dispatch(fetchingTimetablesDone());\n        });\n    };\n};\n\nexport const fetchOneTimetable = (id) => {\n    return dispatch => {\n        dispatch(startFetchingOne());\n        return loadTimetable(id)\n        .then( data => {\n            dispatch(fetchingTimetablesDone(data.timetables));\n        })\n        .catch( err => {\n            console.error(err);\n            dispatch(fetchingTimetablesDone());\n        });\n    };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Time = ({value}) => {\n    const hour = _parseHour(value);\n    const minute = _parseMinute(value);\n    return (\n        <React.Fragment>\n            {hour}:{minute}\n        </React.Fragment>    \n    );\n};\n\nTime.propTypes = {\n    value: PropTypes.number\n}\n\nconst _parseHour = (time) => {\n        let hour = Math.floor(time / 60 / 60);\n        hour = (hour >= 24) ? hour-24 : hour;\n        return (`0${hour}`).slice(-2);\n      }\n    \nconst _parseMinute = (time) => {\n        return (`0${Math.floor((time / 60) % 60)}`).slice(-2);\n      }\n\n\n\nexport default Time;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Time from './Time';\n\n\nconst Line = styled.small`\n    font-size: 0.75rem;\n    font-style: italic;\n`;\n\nconst Departure = ({time, lines}) => (\n    <React.Fragment>\n        <Time value={time} /><Line>{lines.join()}</Line>\n    </React.Fragment>\n);\n\nDeparture.propTypes = {\n    time: PropTypes.number.isRequired,\n    lines: PropTypes.array.isRequired\n};\n\nexport default Departure;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactInterval from 'react-interval';\nimport Departure from './Departure';\nimport { withRouter } from 'react-router-dom'\n\nclass ListItem extends React.Component {\n\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired\n    };\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            departures: this.props.timetable ? this.getDepartures(this.props.timetable, new Date(), 3) : []\n        }\n    }\n\n    update(){\n        this.setState({\n            departures: this.props.timetable ? this.getDepartures(this.props.timetable, new Date(), 3) : []\n        });\n    }\n     \n    \n      render(){\n          const {departures} = this.state;\n\n        return(\n            <div className=\"list-item\">\n                <h2 onClick={ () => { this.props.history.push('/stop/'+this.props.index)  } } style={{cursor: 'pointer'}} >{this.props.title} ({this.props.id})</h2>\n                <div style={{display: 'flex', justifyContent: 'space-evenly' }} >\n                    { departures.length>0 && departures.map( item => <div key={item.time} ><Departure time={item.time} lines={item.lines} /></div> )}\n                </div>\n                <ReactInterval timeout={1000} enabled={true}\n                callback={() => this.update() } />\n            </div>\n        )\n\n    }\n\n\n    getDepartures(timetable, date, count) {\n        let now =  ( (date.getHours() * 60 ) + date.getMinutes() ) * 60;\n    \n        let departures = timetable\n        .filter( (item) => {\n          return item.time > now;\n        });\n    \n    \n        return departures.slice(0, count);\n      }\n    \n \n      \n}    \n\nexport {ListItem};\nexport default withRouter(ListItem);\n","export default class Storage {\n\n    constructor (){\n        this.key = 'stops';\n        this.separator = ';';\n      }\n    \n      getStops() {\n          let stops = window.localStorage.getItem(this.key);\n          return (stops == null || stops.length === 0) ? [] : stops.split(this.separator);\n      }\n    \n    \n     addStop (id){\n       let stops = this.getStops();\n    \n       stops.push(id);\n       this.saveIds(stops);\n     }\n    \n     delete (id){\n       let stops = this.getStops();\n       let index = stops.indexOf(id);\n    \n       stops.splice(index,1);\n       this.saveIds(stops);\n     }\n    \n     saveIds(stops){\n       window.localStorage.setItem(this.key, stops.join(this.separator) );\n     }\n    \n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Storage from '../services/storage';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    width: 100px;\n    height: 40px;\n    background: none;\n    /*border: 1px solid #ccc;\n    border-radius: 10px;*/\n    border: none;\n    color: #ccc;\n    font-size: 1.5rem;\n\n    :focus{\n        outline: none;\n    }\n\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    margin-top: 1rem;\n    width: 150px;\n\n    input, button {\n        margin-bottom: 1rem;\n    }\n\n    input {\n        text-align: center;\n        border: none;\n        border-bottom: 1px solid #ccc;\n    }\n`;\n\nconst AddButton = styled.button`\n    background: none;\n    /*border: 1px solid #ccc;\n    border-radius: 15px;*/\n    border: none;\n    padding: 1rem;\n\n    :focus {\n        outline: none;\n    }\n`;\n\n\nexport default class AddNew extends React.Component {\n\n    static propTypes = {\n        onAdd: PropTypes.func.isRequired\n    };\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            displayForm: false\n        };\n\n        this.toggleForm = this.toggleForm.bind(this);\n        this.onSubmit  = this.onSubmit.bind(this);\n    }\n\n    \n    toggleForm(){ this.setState({displayForm: !this.state.displayForm }) };\n\n    onSubmit(event)  { \n        event.preventDefault(); \n        const id = event.target.stopId.value;\n        if (id.trim().length > 0){\n            this.props.onAdd(id); \n            new Storage().addStop(id);  \n        }\n        event.target.stopId.value = '';  \n        this.toggleForm();\n\n    \n    };\n\n    render(){    \n        const toggleButtonClass = this.state.displayForm ? 'close-form' : 'open-form';\n        const toggleButtonValue = this.state.displayForm ? '-' : '+';\n\n        return (\n            <div className=\"new-form\" style={{marginTop: '1rem'}}  >\n                <div><Button id={toggleButtonClass} type=\"button\" onClick={ this.toggleForm } >{toggleButtonValue}</Button></div>\n                {  this.state.displayForm && <Form id=\"add-form\" onSubmit={ this.onSubmit } autoComplete=\"off\" >\n                    <input type=\"text\" name=\"stopId\" placeholder=\"id\" />\n                    <AddButton id=\"submit-form\" type=\"submit\" >Add</AddButton> \n                </Form>\n                }\n            </div>\n            );\n    }\n\n};\n","import {connect } from 'react-redux';\nimport AddNew from '../presentation/AddNew';\nimport { fetchOneTimetable } from '../actions';\n\nconst mapStateToProps = state => ({ });\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAdd: (id) =>  { dispatch(fetchOneTimetable(id)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNew);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\nimport AddNewContainer from '../containers/AddNewContainer';\nimport styled from 'styled-components';\n\nconst ListDiv = styled.div`\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n`;\n\nconst List = ({loading, timetables}) => {\n    \n    return (\n        <ListDiv className=\"list\" >   \n            { loading && <div id=\"loading\" >Loading....</div>}\n            { !loading && timetables.map( (timetable, index) => <ListItem key={timetable.title} {...timetable} index={index} /> ) }\n            <AddNewContainer />\n        </ListDiv>\n    );\n};\n\nList.propTypes = {\n    timetables: PropTypes.arrayOf(PropTypes.shape({title: PropTypes.string, timetable: PropTypes.array })),\n    loading: PropTypes.bool.isRequired\n};\n\nexport default List;\n","import List from '../presentation/List';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.timetable.loading,\n        timetables: state.timetable.list\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react';\nimport Departure from './Departure';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nh1 {\n    text-align: center;\n}\n\ndiv {\n    width: 50px;\n    margin: auto;\n}\n`;\n\n\nconst DisplaySchedule = ({title, loaded, timetable, id}) => (\n    <div>\n    {!loaded && <div>Loading...</div> }\n    {loaded && <Container>\n        <h1>{title} ({id})</h1>\n        {timetable.map( item => <div key={item.time}><Departure time={item.time} lines={item.lines} /></div>) }\n    </Container> }\n    </div>\n);\n\nexport default DisplaySchedule;","import { connect } from 'react-redux';\nimport DisplaySchedule from '../presentation/Display';\n\nconst mapStateToProps = (state, props) => {\n    const id = props.match.params.id;\n    let loaded = false;\n    let stop = {title: '', timetable: [], id: ''};\n    if (state.timetable.list && state.timetable.list.length > 0){\n        stop = state.timetable.list[id];\n        loaded = true;\n\n    }\n    return { \n        title: stop.title,\n        timetable: stop.timetable,\n        loaded: loaded,\n        id: stop.id\n     }\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplaySchedule);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchTimetables } from '../actions';\nimport {connect} from 'react-redux';\nimport ListContainer from './ListContainer';\nimport Storage from '../services/storage';\nimport DisplayScheduleContainer from '../containers/DisplayScheduleContainer';\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\n\n\nclass Root extends Component {\n\n  static propTypes = {\n    onMount: PropTypes.func.isRequired\n  }\n\n  constructor(props){\n    super(props);\n\n  }\n\n  componentDidMount(){\n    console.log('loading');\n    const storage = new Storage();\n    if (storage.getStops().length > 0)\n      this.props.onMount(storage.getStops());\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"app\">\n        <Switch>\n        <Route path=\"/stop/:id?\" component={DisplayScheduleContainer} />\n        <Route path=\"*\" component={ListContainer}/>\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMount: (ids) => dispatch(fetchTimetables(ids))\n  };\n};\n\nexport { Root };\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);\n","import { FETCH_TIMETABLES_START, FETCH_TIMETABLES_DONE, FETCH_ONE_START } from '../actions';\nimport { combineReducers } from 'redux';\n\nconst timetable = (state = {loading: false, list: [], loadingOne: false}, action) => {\n    switch(action.type) {\n        case FETCH_TIMETABLES_START:\n            return {loading: true, list: [], loadingOne: false};\n        case FETCH_TIMETABLES_DONE:\n            return { loading: false, list: state.list.concat(action.timetables), loadingOne: false };\n        case FETCH_ONE_START: \n            return { ...state, loadingOne: true }            \n        default:\n            return state;\n    };\n};\n\nconst rootReducer = combineReducers({timetable});\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './containers/Root';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n<Provider store={store}>\n    <Root />\n</Provider>\n, document.getElementById('root'));\n\n\n"],"sourceRoot":""}